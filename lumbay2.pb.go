// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.29.3
// source: lumbay2.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameStatus int32

const (
	GameStatus_NONE                     GameStatus = 0
	GameStatus_WAITING_FOR_OTHER_PLAYER GameStatus = 1
	GameStatus_READY_TO_START           GameStatus = 2
	GameStatus_STARTED                  GameStatus = 3
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "NONE",
		1: "WAITING_FOR_OTHER_PLAYER",
		2: "READY_TO_START",
		3: "STARTED",
	}
	GameStatus_value = map[string]int32{
		"NONE":                     0,
		"WAITING_FOR_OTHER_PLAYER": 1,
		"READY_TO_START":           2,
		"STARTED":                  3,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lumbay2_proto_enumTypes[0].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_lumbay2_proto_enumTypes[0]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{0}
}

type WorldId int32

const (
	WorldId_WORLD_ID_NONE WorldId = 0
	WorldId_WORLD_ID_ONE  WorldId = 1
)

// Enum value maps for WorldId.
var (
	WorldId_name = map[int32]string{
		0: "WORLD_ID_NONE",
		1: "WORLD_ID_ONE",
	}
	WorldId_value = map[string]int32{
		"WORLD_ID_NONE": 0,
		"WORLD_ID_ONE":  1,
	}
)

func (x WorldId) Enum() *WorldId {
	p := new(WorldId)
	*p = x
	return p
}

func (x WorldId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorldId) Descriptor() protoreflect.EnumDescriptor {
	return file_lumbay2_proto_enumTypes[1].Descriptor()
}

func (WorldId) Type() protoreflect.EnumType {
	return &file_lumbay2_proto_enumTypes[1]
}

func (x WorldId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorldId.Descriptor instead.
func (WorldId) EnumDescriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{1}
}

type WorldOneStatus int32

const (
	WorldOneStatus_WORLD_ONE_STATUS_NONE                            WorldOneStatus = 0
	WorldOneStatus_WORLD_ONE_STATUS_YOUR_TURN_TO_MOVE               WorldOneStatus = 1
	WorldOneStatus_WORLD_ONE_STATUS_WAIT_FOR_YOUR_TURN              WorldOneStatus = 2
	WorldOneStatus_WORLD_ONE_STATUS_YOU_WIN                         WorldOneStatus = 3
	WorldOneStatus_WORLD_ONE_STATUS_YOU_LOSE                        WorldOneStatus = 4
	WorldOneStatus_WORLD_ONE_STATUS_YOU_WIN_BY_OUT_OF_MOVES         WorldOneStatus = 5
	WorldOneStatus_WORLD_ONE_STATUS_YOU_LOSE_BY_OUT_OF_MOVES        WorldOneStatus = 6
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_ONE_WINS                 WorldOneStatus = 7
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_TWO_WINS                 WorldOneStatus = 8
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_ONE_WINS_BY_OUT_OF_MOVES WorldOneStatus = 9
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_TWO_WINS_BY_OUT_OF_MOVES WorldOneStatus = 10
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_ONE_MOVED                WorldOneStatus = 11
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_TWO_MOVED                WorldOneStatus = 12
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_ONE_CONFIRMS_RESTART     WorldOneStatus = 13
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_TWO_CONFIRMS_RESTART     WorldOneStatus = 14
	WorldOneStatus_WORLD_ONE_STATUS_RESTARTED                       WorldOneStatus = 15
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_ONE_EXITED               WorldOneStatus = 16
	WorldOneStatus_WORLD_ONE_STATUS_PLAYER_TWO_EXITED               WorldOneStatus = 17
	WorldOneStatus_WORLD_ONE_STATUS_ABANDONED                       WorldOneStatus = 18
)

// Enum value maps for WorldOneStatus.
var (
	WorldOneStatus_name = map[int32]string{
		0:  "WORLD_ONE_STATUS_NONE",
		1:  "WORLD_ONE_STATUS_YOUR_TURN_TO_MOVE",
		2:  "WORLD_ONE_STATUS_WAIT_FOR_YOUR_TURN",
		3:  "WORLD_ONE_STATUS_YOU_WIN",
		4:  "WORLD_ONE_STATUS_YOU_LOSE",
		5:  "WORLD_ONE_STATUS_YOU_WIN_BY_OUT_OF_MOVES",
		6:  "WORLD_ONE_STATUS_YOU_LOSE_BY_OUT_OF_MOVES",
		7:  "WORLD_ONE_STATUS_PLAYER_ONE_WINS",
		8:  "WORLD_ONE_STATUS_PLAYER_TWO_WINS",
		9:  "WORLD_ONE_STATUS_PLAYER_ONE_WINS_BY_OUT_OF_MOVES",
		10: "WORLD_ONE_STATUS_PLAYER_TWO_WINS_BY_OUT_OF_MOVES",
		11: "WORLD_ONE_STATUS_PLAYER_ONE_MOVED",
		12: "WORLD_ONE_STATUS_PLAYER_TWO_MOVED",
		13: "WORLD_ONE_STATUS_PLAYER_ONE_CONFIRMS_RESTART",
		14: "WORLD_ONE_STATUS_PLAYER_TWO_CONFIRMS_RESTART",
		15: "WORLD_ONE_STATUS_RESTARTED",
		16: "WORLD_ONE_STATUS_PLAYER_ONE_EXITED",
		17: "WORLD_ONE_STATUS_PLAYER_TWO_EXITED",
		18: "WORLD_ONE_STATUS_ABANDONED",
	}
	WorldOneStatus_value = map[string]int32{
		"WORLD_ONE_STATUS_NONE":                            0,
		"WORLD_ONE_STATUS_YOUR_TURN_TO_MOVE":               1,
		"WORLD_ONE_STATUS_WAIT_FOR_YOUR_TURN":              2,
		"WORLD_ONE_STATUS_YOU_WIN":                         3,
		"WORLD_ONE_STATUS_YOU_LOSE":                        4,
		"WORLD_ONE_STATUS_YOU_WIN_BY_OUT_OF_MOVES":         5,
		"WORLD_ONE_STATUS_YOU_LOSE_BY_OUT_OF_MOVES":        6,
		"WORLD_ONE_STATUS_PLAYER_ONE_WINS":                 7,
		"WORLD_ONE_STATUS_PLAYER_TWO_WINS":                 8,
		"WORLD_ONE_STATUS_PLAYER_ONE_WINS_BY_OUT_OF_MOVES": 9,
		"WORLD_ONE_STATUS_PLAYER_TWO_WINS_BY_OUT_OF_MOVES": 10,
		"WORLD_ONE_STATUS_PLAYER_ONE_MOVED":                11,
		"WORLD_ONE_STATUS_PLAYER_TWO_MOVED":                12,
		"WORLD_ONE_STATUS_PLAYER_ONE_CONFIRMS_RESTART":     13,
		"WORLD_ONE_STATUS_PLAYER_TWO_CONFIRMS_RESTART":     14,
		"WORLD_ONE_STATUS_RESTARTED":                       15,
		"WORLD_ONE_STATUS_PLAYER_ONE_EXITED":               16,
		"WORLD_ONE_STATUS_PLAYER_TWO_EXITED":               17,
		"WORLD_ONE_STATUS_ABANDONED":                       18,
	}
)

func (x WorldOneStatus) Enum() *WorldOneStatus {
	p := new(WorldOneStatus)
	*p = x
	return p
}

func (x WorldOneStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorldOneStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lumbay2_proto_enumTypes[2].Descriptor()
}

func (WorldOneStatus) Type() protoreflect.EnumType {
	return &file_lumbay2_proto_enumTypes[2]
}

func (x WorldOneStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorldOneStatus.Descriptor instead.
func (WorldOneStatus) EnumDescriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{2}
}

type WorldOneRegionId int32

const (
	WorldOneRegionId_WORLD_ONE_REGION_ID_NONE WorldOneRegionId = 0
	WorldOneRegionId_WORLD_ONE_REGION_ID_ONE  WorldOneRegionId = 1
)

// Enum value maps for WorldOneRegionId.
var (
	WorldOneRegionId_name = map[int32]string{
		0: "WORLD_ONE_REGION_ID_NONE",
		1: "WORLD_ONE_REGION_ID_ONE",
	}
	WorldOneRegionId_value = map[string]int32{
		"WORLD_ONE_REGION_ID_NONE": 0,
		"WORLD_ONE_REGION_ID_ONE":  1,
	}
)

func (x WorldOneRegionId) Enum() *WorldOneRegionId {
	p := new(WorldOneRegionId)
	*p = x
	return p
}

func (x WorldOneRegionId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorldOneRegionId) Descriptor() protoreflect.EnumDescriptor {
	return file_lumbay2_proto_enumTypes[3].Descriptor()
}

func (WorldOneRegionId) Type() protoreflect.EnumType {
	return &file_lumbay2_proto_enumTypes[3]
}

func (x WorldOneRegionId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorldOneRegionId.Descriptor instead.
func (WorldOneRegionId) EnumDescriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{3}
}

type WorldOneObjectId int32

const (
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_NONE                   WorldOneObjectId = 0
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_ONE   WorldOneObjectId = 1
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_TWO   WorldOneObjectId = 2
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_THREE WorldOneObjectId = 3
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_ONE   WorldOneObjectId = 4
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_TWO   WorldOneObjectId = 5
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_THREE WorldOneObjectId = 6
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_STONE_PLAYER_ONE       WorldOneObjectId = 7
	WorldOneObjectId_WORLD_ONE_OBJECT_ID_STONE_PLAYER_TWO       WorldOneObjectId = 8
)

// Enum value maps for WorldOneObjectId.
var (
	WorldOneObjectId_name = map[int32]string{
		0: "WORLD_ONE_OBJECT_ID_NONE",
		1: "WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_ONE",
		2: "WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_TWO",
		3: "WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_THREE",
		4: "WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_ONE",
		5: "WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_TWO",
		6: "WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_THREE",
		7: "WORLD_ONE_OBJECT_ID_STONE_PLAYER_ONE",
		8: "WORLD_ONE_OBJECT_ID_STONE_PLAYER_TWO",
	}
	WorldOneObjectId_value = map[string]int32{
		"WORLD_ONE_OBJECT_ID_NONE":                   0,
		"WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_ONE":   1,
		"WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_TWO":   2,
		"WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_THREE": 3,
		"WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_ONE":   4,
		"WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_TWO":   5,
		"WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_THREE": 6,
		"WORLD_ONE_OBJECT_ID_STONE_PLAYER_ONE":       7,
		"WORLD_ONE_OBJECT_ID_STONE_PLAYER_TWO":       8,
	}
)

func (x WorldOneObjectId) Enum() *WorldOneObjectId {
	p := new(WorldOneObjectId)
	*p = x
	return p
}

func (x WorldOneObjectId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorldOneObjectId) Descriptor() protoreflect.EnumDescriptor {
	return file_lumbay2_proto_enumTypes[4].Descriptor()
}

func (WorldOneObjectId) Type() protoreflect.EnumType {
	return &file_lumbay2_proto_enumTypes[4]
}

func (x WorldOneObjectId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorldOneObjectId.Descriptor instead.
func (WorldOneObjectId) EnumDescriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{4}
}

type WorldOneObjectStatus int32

const (
	WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_NONE     WorldOneObjectStatus = 0
	WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_SPAWNED  WorldOneObjectStatus = 1
	WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_MOVED    WorldOneObjectStatus = 2
	WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_ASSIGNED WorldOneObjectStatus = 3
)

// Enum value maps for WorldOneObjectStatus.
var (
	WorldOneObjectStatus_name = map[int32]string{
		0: "WORLD_ONE_OBJECT_STATUS_NONE",
		1: "WORLD_ONE_OBJECT_STATUS_SPAWNED",
		2: "WORLD_ONE_OBJECT_STATUS_MOVED",
		3: "WORLD_ONE_OBJECT_STATUS_ASSIGNED",
	}
	WorldOneObjectStatus_value = map[string]int32{
		"WORLD_ONE_OBJECT_STATUS_NONE":     0,
		"WORLD_ONE_OBJECT_STATUS_SPAWNED":  1,
		"WORLD_ONE_OBJECT_STATUS_MOVED":    2,
		"WORLD_ONE_OBJECT_STATUS_ASSIGNED": 3,
	}
)

func (x WorldOneObjectStatus) Enum() *WorldOneObjectStatus {
	p := new(WorldOneObjectStatus)
	*p = x
	return p
}

func (x WorldOneObjectStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorldOneObjectStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lumbay2_proto_enumTypes[5].Descriptor()
}

func (WorldOneObjectStatus) Type() protoreflect.EnumType {
	return &file_lumbay2_proto_enumTypes[5]
}

func (x WorldOneObjectStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorldOneObjectStatus.Descriptor instead.
func (WorldOneObjectStatus) EnumDescriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{5}
}

type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int64 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// Types that are assignable to Type:
	//	*Update_Ping
	//	*Update_YouAreInGameUpdate
	//	*Update_WaitingForOtherPlayerUpdate
	//	*Update_ReadyToStartUpdate
	//	*Update_GameCodeGenerated
	//	*Update_YouQuitTheGameUpdate
	//	*Update_GameStartedUpdate
	//	*Update_WorldOneRegionUpdate
	//	*Update_WorldOneStatusUpdate
	//	*Update_WorldOneObjectUpdate
	//	*Update_YouConfirmForRestartUpdate
	//	*Update_OtherConfirmsForRestartUpdate
	//	*Update_YouExitWorldUpdate
	//	*Update_OtherExitsWorldUpdate
	Type isUpdate_Type `protobuf_oneof:"type"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{0}
}

func (x *Update) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (m *Update) GetType() isUpdate_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Update) GetPing() *Ping {
	if x, ok := x.GetType().(*Update_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *Update) GetYouAreInGameUpdate() *YouAreInGameUpdate {
	if x, ok := x.GetType().(*Update_YouAreInGameUpdate); ok {
		return x.YouAreInGameUpdate
	}
	return nil
}

func (x *Update) GetWaitingForOtherPlayerUpdate() *WaitingForOtherPlayerUpdate {
	if x, ok := x.GetType().(*Update_WaitingForOtherPlayerUpdate); ok {
		return x.WaitingForOtherPlayerUpdate
	}
	return nil
}

func (x *Update) GetReadyToStartUpdate() *ReadyToStartUpdate {
	if x, ok := x.GetType().(*Update_ReadyToStartUpdate); ok {
		return x.ReadyToStartUpdate
	}
	return nil
}

func (x *Update) GetGameCodeGenerated() *GameCodeGeneratedUpdate {
	if x, ok := x.GetType().(*Update_GameCodeGenerated); ok {
		return x.GameCodeGenerated
	}
	return nil
}

func (x *Update) GetYouQuitTheGameUpdate() *YouQuitTheGameUpdate {
	if x, ok := x.GetType().(*Update_YouQuitTheGameUpdate); ok {
		return x.YouQuitTheGameUpdate
	}
	return nil
}

func (x *Update) GetGameStartedUpdate() *GameStartedUpdate {
	if x, ok := x.GetType().(*Update_GameStartedUpdate); ok {
		return x.GameStartedUpdate
	}
	return nil
}

func (x *Update) GetWorldOneRegionUpdate() *WorldOneRegionUpdate {
	if x, ok := x.GetType().(*Update_WorldOneRegionUpdate); ok {
		return x.WorldOneRegionUpdate
	}
	return nil
}

func (x *Update) GetWorldOneStatusUpdate() *WorldOneStatusUpdate {
	if x, ok := x.GetType().(*Update_WorldOneStatusUpdate); ok {
		return x.WorldOneStatusUpdate
	}
	return nil
}

func (x *Update) GetWorldOneObjectUpdate() *WorldOneObjectUpdate {
	if x, ok := x.GetType().(*Update_WorldOneObjectUpdate); ok {
		return x.WorldOneObjectUpdate
	}
	return nil
}

func (x *Update) GetYouConfirmForRestartUpdate() *YouConfirmForRestartUpdate {
	if x, ok := x.GetType().(*Update_YouConfirmForRestartUpdate); ok {
		return x.YouConfirmForRestartUpdate
	}
	return nil
}

func (x *Update) GetOtherConfirmsForRestartUpdate() *OtherConfirmsForRestartUpdate {
	if x, ok := x.GetType().(*Update_OtherConfirmsForRestartUpdate); ok {
		return x.OtherConfirmsForRestartUpdate
	}
	return nil
}

func (x *Update) GetYouExitWorldUpdate() *YouExitWorldUpdate {
	if x, ok := x.GetType().(*Update_YouExitWorldUpdate); ok {
		return x.YouExitWorldUpdate
	}
	return nil
}

func (x *Update) GetOtherExitsWorldUpdate() *OtherExitsWorldUpdate {
	if x, ok := x.GetType().(*Update_OtherExitsWorldUpdate); ok {
		return x.OtherExitsWorldUpdate
	}
	return nil
}

type isUpdate_Type interface {
	isUpdate_Type()
}

type Update_Ping struct {
	Ping *Ping `protobuf:"bytes,2,opt,name=ping,proto3,oneof"`
}

type Update_YouAreInGameUpdate struct {
	YouAreInGameUpdate *YouAreInGameUpdate `protobuf:"bytes,3,opt,name=you_are_in_game_update,json=youAreInGameUpdate,proto3,oneof"`
}

type Update_WaitingForOtherPlayerUpdate struct {
	WaitingForOtherPlayerUpdate *WaitingForOtherPlayerUpdate `protobuf:"bytes,4,opt,name=waiting_for_other_player_update,json=waitingForOtherPlayerUpdate,proto3,oneof"`
}

type Update_ReadyToStartUpdate struct {
	ReadyToStartUpdate *ReadyToStartUpdate `protobuf:"bytes,5,opt,name=ready_to_start_update,json=readyToStartUpdate,proto3,oneof"`
}

type Update_GameCodeGenerated struct {
	GameCodeGenerated *GameCodeGeneratedUpdate `protobuf:"bytes,6,opt,name=game_code_generated,json=gameCodeGenerated,proto3,oneof"`
}

type Update_YouQuitTheGameUpdate struct {
	YouQuitTheGameUpdate *YouQuitTheGameUpdate `protobuf:"bytes,7,opt,name=you_quit_the_game_update,json=youQuitTheGameUpdate,proto3,oneof"`
}

type Update_GameStartedUpdate struct {
	GameStartedUpdate *GameStartedUpdate `protobuf:"bytes,8,opt,name=game_started_update,json=gameStartedUpdate,proto3,oneof"`
}

type Update_WorldOneRegionUpdate struct {
	WorldOneRegionUpdate *WorldOneRegionUpdate `protobuf:"bytes,9,opt,name=world_one_region_update,json=worldOneRegionUpdate,proto3,oneof"`
}

type Update_WorldOneStatusUpdate struct {
	WorldOneStatusUpdate *WorldOneStatusUpdate `protobuf:"bytes,10,opt,name=world_one_status_update,json=worldOneStatusUpdate,proto3,oneof"`
}

type Update_WorldOneObjectUpdate struct {
	WorldOneObjectUpdate *WorldOneObjectUpdate `protobuf:"bytes,11,opt,name=world_one_object_update,json=worldOneObjectUpdate,proto3,oneof"`
}

type Update_YouConfirmForRestartUpdate struct {
	YouConfirmForRestartUpdate *YouConfirmForRestartUpdate `protobuf:"bytes,12,opt,name=you_confirm_for_restart_update,json=youConfirmForRestartUpdate,proto3,oneof"`
}

type Update_OtherConfirmsForRestartUpdate struct {
	OtherConfirmsForRestartUpdate *OtherConfirmsForRestartUpdate `protobuf:"bytes,13,opt,name=other_confirms_for_restart_update,json=otherConfirmsForRestartUpdate,proto3,oneof"`
}

type Update_YouExitWorldUpdate struct {
	YouExitWorldUpdate *YouExitWorldUpdate `protobuf:"bytes,14,opt,name=you_exit_world_update,json=youExitWorldUpdate,proto3,oneof"`
}

type Update_OtherExitsWorldUpdate struct {
	OtherExitsWorldUpdate *OtherExitsWorldUpdate `protobuf:"bytes,15,opt,name=other_exits_world_update,json=otherExitsWorldUpdate,proto3,oneof"`
}

func (*Update_Ping) isUpdate_Type() {}

func (*Update_YouAreInGameUpdate) isUpdate_Type() {}

func (*Update_WaitingForOtherPlayerUpdate) isUpdate_Type() {}

func (*Update_ReadyToStartUpdate) isUpdate_Type() {}

func (*Update_GameCodeGenerated) isUpdate_Type() {}

func (*Update_YouQuitTheGameUpdate) isUpdate_Type() {}

func (*Update_GameStartedUpdate) isUpdate_Type() {}

func (*Update_WorldOneRegionUpdate) isUpdate_Type() {}

func (*Update_WorldOneStatusUpdate) isUpdate_Type() {}

func (*Update_WorldOneObjectUpdate) isUpdate_Type() {}

func (*Update_YouConfirmForRestartUpdate) isUpdate_Type() {}

func (*Update_OtherConfirmsForRestartUpdate) isUpdate_Type() {}

func (*Update_YouExitWorldUpdate) isUpdate_Type() {}

func (*Update_OtherExitsWorldUpdate) isUpdate_Type() {}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Request_AcquireClientIdRequest
	//	*Request_AcquirePublicKeyRequest
	//	*Request_CreateGameRequest
	//	*Request_GenerateGameCodeRequest
	//	*Request_JoinGameRequest
	//	*Request_QuitGameRequest
	//	*Request_StartGameRequest
	//	*Request_ProcessWorldOneObjectRequest
	//	*Request_RestartWorldRequest
	//	*Request_ExitWorldRequest
	Type isRequest_Type `protobuf_oneof:"type"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{1}
}

func (m *Request) GetType() isRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Request) GetAcquireClientIdRequest() *AcquireClientIdRequest {
	if x, ok := x.GetType().(*Request_AcquireClientIdRequest); ok {
		return x.AcquireClientIdRequest
	}
	return nil
}

func (x *Request) GetAcquirePublicKeyRequest() *AcquirePublicKeyRequest {
	if x, ok := x.GetType().(*Request_AcquirePublicKeyRequest); ok {
		return x.AcquirePublicKeyRequest
	}
	return nil
}

func (x *Request) GetCreateGameRequest() *CreateGameRequest {
	if x, ok := x.GetType().(*Request_CreateGameRequest); ok {
		return x.CreateGameRequest
	}
	return nil
}

func (x *Request) GetGenerateGameCodeRequest() *GenerateGameCodeRequest {
	if x, ok := x.GetType().(*Request_GenerateGameCodeRequest); ok {
		return x.GenerateGameCodeRequest
	}
	return nil
}

func (x *Request) GetJoinGameRequest() *JoinGameRequest {
	if x, ok := x.GetType().(*Request_JoinGameRequest); ok {
		return x.JoinGameRequest
	}
	return nil
}

func (x *Request) GetQuitGameRequest() *QuitGameRequest {
	if x, ok := x.GetType().(*Request_QuitGameRequest); ok {
		return x.QuitGameRequest
	}
	return nil
}

func (x *Request) GetStartGameRequest() *StartGameRequest {
	if x, ok := x.GetType().(*Request_StartGameRequest); ok {
		return x.StartGameRequest
	}
	return nil
}

func (x *Request) GetProcessWorldOneObjectRequest() *ProcessWorldOneObjectRequest {
	if x, ok := x.GetType().(*Request_ProcessWorldOneObjectRequest); ok {
		return x.ProcessWorldOneObjectRequest
	}
	return nil
}

func (x *Request) GetRestartWorldRequest() *RestartWorldRequest {
	if x, ok := x.GetType().(*Request_RestartWorldRequest); ok {
		return x.RestartWorldRequest
	}
	return nil
}

func (x *Request) GetExitWorldRequest() *ExitWorldRequest {
	if x, ok := x.GetType().(*Request_ExitWorldRequest); ok {
		return x.ExitWorldRequest
	}
	return nil
}

type isRequest_Type interface {
	isRequest_Type()
}

type Request_AcquireClientIdRequest struct {
	AcquireClientIdRequest *AcquireClientIdRequest `protobuf:"bytes,1,opt,name=acquire_client_id_request,json=acquireClientIdRequest,proto3,oneof"`
}

type Request_AcquirePublicKeyRequest struct {
	AcquirePublicKeyRequest *AcquirePublicKeyRequest `protobuf:"bytes,2,opt,name=acquire_public_key_request,json=acquirePublicKeyRequest,proto3,oneof"`
}

type Request_CreateGameRequest struct {
	CreateGameRequest *CreateGameRequest `protobuf:"bytes,3,opt,name=create_game_request,json=createGameRequest,proto3,oneof"`
}

type Request_GenerateGameCodeRequest struct {
	GenerateGameCodeRequest *GenerateGameCodeRequest `protobuf:"bytes,4,opt,name=generate_game_code_request,json=generateGameCodeRequest,proto3,oneof"`
}

type Request_JoinGameRequest struct {
	JoinGameRequest *JoinGameRequest `protobuf:"bytes,5,opt,name=join_game_request,json=joinGameRequest,proto3,oneof"`
}

type Request_QuitGameRequest struct {
	QuitGameRequest *QuitGameRequest `protobuf:"bytes,6,opt,name=quit_game_request,json=quitGameRequest,proto3,oneof"`
}

type Request_StartGameRequest struct {
	StartGameRequest *StartGameRequest `protobuf:"bytes,7,opt,name=start_game_request,json=startGameRequest,proto3,oneof"`
}

type Request_ProcessWorldOneObjectRequest struct {
	ProcessWorldOneObjectRequest *ProcessWorldOneObjectRequest `protobuf:"bytes,8,opt,name=process_world_one_object_request,json=processWorldOneObjectRequest,proto3,oneof"`
}

type Request_RestartWorldRequest struct {
	RestartWorldRequest *RestartWorldRequest `protobuf:"bytes,9,opt,name=restart_world_request,json=restartWorldRequest,proto3,oneof"`
}

type Request_ExitWorldRequest struct {
	ExitWorldRequest *ExitWorldRequest `protobuf:"bytes,10,opt,name=exit_world_request,json=exitWorldRequest,proto3,oneof"`
}

func (*Request_AcquireClientIdRequest) isRequest_Type() {}

func (*Request_AcquirePublicKeyRequest) isRequest_Type() {}

func (*Request_CreateGameRequest) isRequest_Type() {}

func (*Request_GenerateGameCodeRequest) isRequest_Type() {}

func (*Request_JoinGameRequest) isRequest_Type() {}

func (*Request_QuitGameRequest) isRequest_Type() {}

func (*Request_StartGameRequest) isRequest_Type() {}

func (*Request_ProcessWorldOneObjectRequest) isRequest_Type() {}

func (*Request_RestartWorldRequest) isRequest_Type() {}

func (*Request_ExitWorldRequest) isRequest_Type() {}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Reply_AcquireClientIdReply
	//	*Reply_AcquirePublicKeyReply
	//	*Reply_CreateGameReply
	//	*Reply_GenerateGameCodeReply
	//	*Reply_JoinGameReply
	//	*Reply_QuitGameReply
	//	*Reply_StartGameReply
	//	*Reply_ProcessWorldOneObjectReply
	//	*Reply_RestartWorldReply
	//	*Reply_ExitWorldReply
	Type isReply_Type `protobuf_oneof:"type"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{2}
}

func (m *Reply) GetType() isReply_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Reply) GetAcquireClientIdReply() *AcquireClientIdReply {
	if x, ok := x.GetType().(*Reply_AcquireClientIdReply); ok {
		return x.AcquireClientIdReply
	}
	return nil
}

func (x *Reply) GetAcquirePublicKeyReply() *AcquirePublicKeyReply {
	if x, ok := x.GetType().(*Reply_AcquirePublicKeyReply); ok {
		return x.AcquirePublicKeyReply
	}
	return nil
}

func (x *Reply) GetCreateGameReply() *CreateGameReply {
	if x, ok := x.GetType().(*Reply_CreateGameReply); ok {
		return x.CreateGameReply
	}
	return nil
}

func (x *Reply) GetGenerateGameCodeReply() *GenerateGameCodeReply {
	if x, ok := x.GetType().(*Reply_GenerateGameCodeReply); ok {
		return x.GenerateGameCodeReply
	}
	return nil
}

func (x *Reply) GetJoinGameReply() *JoinGameReply {
	if x, ok := x.GetType().(*Reply_JoinGameReply); ok {
		return x.JoinGameReply
	}
	return nil
}

func (x *Reply) GetQuitGameReply() *QuitGameReply {
	if x, ok := x.GetType().(*Reply_QuitGameReply); ok {
		return x.QuitGameReply
	}
	return nil
}

func (x *Reply) GetStartGameReply() *StartGameReply {
	if x, ok := x.GetType().(*Reply_StartGameReply); ok {
		return x.StartGameReply
	}
	return nil
}

func (x *Reply) GetProcessWorldOneObjectReply() *ProcessWorldOneObjectReply {
	if x, ok := x.GetType().(*Reply_ProcessWorldOneObjectReply); ok {
		return x.ProcessWorldOneObjectReply
	}
	return nil
}

func (x *Reply) GetRestartWorldReply() *RestartWorldReply {
	if x, ok := x.GetType().(*Reply_RestartWorldReply); ok {
		return x.RestartWorldReply
	}
	return nil
}

func (x *Reply) GetExitWorldReply() *ExitWorldReply {
	if x, ok := x.GetType().(*Reply_ExitWorldReply); ok {
		return x.ExitWorldReply
	}
	return nil
}

type isReply_Type interface {
	isReply_Type()
}

type Reply_AcquireClientIdReply struct {
	AcquireClientIdReply *AcquireClientIdReply `protobuf:"bytes,1,opt,name=acquire_client_id_reply,json=acquireClientIdReply,proto3,oneof"`
}

type Reply_AcquirePublicKeyReply struct {
	AcquirePublicKeyReply *AcquirePublicKeyReply `protobuf:"bytes,2,opt,name=acquire_public_key_reply,json=acquirePublicKeyReply,proto3,oneof"`
}

type Reply_CreateGameReply struct {
	CreateGameReply *CreateGameReply `protobuf:"bytes,3,opt,name=create_game_reply,json=createGameReply,proto3,oneof"`
}

type Reply_GenerateGameCodeReply struct {
	GenerateGameCodeReply *GenerateGameCodeReply `protobuf:"bytes,4,opt,name=generate_game_code_reply,json=generateGameCodeReply,proto3,oneof"`
}

type Reply_JoinGameReply struct {
	JoinGameReply *JoinGameReply `protobuf:"bytes,5,opt,name=join_game_reply,json=joinGameReply,proto3,oneof"`
}

type Reply_QuitGameReply struct {
	QuitGameReply *QuitGameReply `protobuf:"bytes,6,opt,name=quit_game_reply,json=quitGameReply,proto3,oneof"`
}

type Reply_StartGameReply struct {
	StartGameReply *StartGameReply `protobuf:"bytes,7,opt,name=start_game_reply,json=startGameReply,proto3,oneof"`
}

type Reply_ProcessWorldOneObjectReply struct {
	ProcessWorldOneObjectReply *ProcessWorldOneObjectReply `protobuf:"bytes,8,opt,name=process_world_one_object_reply,json=processWorldOneObjectReply,proto3,oneof"`
}

type Reply_RestartWorldReply struct {
	RestartWorldReply *RestartWorldReply `protobuf:"bytes,9,opt,name=restart_world_reply,json=restartWorldReply,proto3,oneof"`
}

type Reply_ExitWorldReply struct {
	ExitWorldReply *ExitWorldReply `protobuf:"bytes,10,opt,name=exit_world_reply,json=exitWorldReply,proto3,oneof"`
}

func (*Reply_AcquireClientIdReply) isReply_Type() {}

func (*Reply_AcquirePublicKeyReply) isReply_Type() {}

func (*Reply_CreateGameReply) isReply_Type() {}

func (*Reply_GenerateGameCodeReply) isReply_Type() {}

func (*Reply_JoinGameReply) isReply_Type() {}

func (*Reply_QuitGameReply) isReply_Type() {}

func (*Reply_StartGameReply) isReply_Type() {}

func (*Reply_ProcessWorldOneObjectReply) isReply_Type() {}

func (*Reply_RestartWorldReply) isReply_Type() {}

func (*Reply_ExitWorldReply) isReply_Type() {}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{3}
}

type AcquireClientIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcquireClientIdRequest) Reset() {
	*x = AcquireClientIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireClientIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireClientIdRequest) ProtoMessage() {}

func (x *AcquireClientIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireClientIdRequest.ProtoReflect.Descriptor instead.
func (*AcquireClientIdRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{4}
}

type AcquirePublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AcquirePublicKeyRequest) Reset() {
	*x = AcquirePublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquirePublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquirePublicKeyRequest) ProtoMessage() {}

func (x *AcquirePublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquirePublicKeyRequest.ProtoReflect.Descriptor instead.
func (*AcquirePublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{5}
}

func (x *AcquirePublicKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AcquireClientIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *AcquireClientIdReply) Reset() {
	*x = AcquireClientIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireClientIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireClientIdReply) ProtoMessage() {}

func (x *AcquireClientIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireClientIdReply.ProtoReflect.Descriptor instead.
func (*AcquireClientIdReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{6}
}

func (x *AcquireClientIdReply) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type AcquirePublicKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *AcquirePublicKeyReply) Reset() {
	*x = AcquirePublicKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquirePublicKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquirePublicKeyReply) ProtoMessage() {}

func (x *AcquirePublicKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquirePublicKeyReply.ProtoReflect.Descriptor instead.
func (*AcquirePublicKeyReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{7}
}

func (x *AcquirePublicKeyReply) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type CreateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{8}
}

type CreateGameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGameReply) Reset() {
	*x = CreateGameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameReply) ProtoMessage() {}

func (x *CreateGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameReply.ProtoReflect.Descriptor instead.
func (*CreateGameReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{9}
}

type GenerateGameCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateGameCodeRequest) Reset() {
	*x = GenerateGameCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateGameCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateGameCodeRequest) ProtoMessage() {}

func (x *GenerateGameCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateGameCodeRequest.ProtoReflect.Descriptor instead.
func (*GenerateGameCodeRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{10}
}

type GenerateGameCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateGameCodeReply) Reset() {
	*x = GenerateGameCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateGameCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateGameCodeReply) ProtoMessage() {}

func (x *GenerateGameCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateGameCodeReply.ProtoReflect.Descriptor instead.
func (*GenerateGameCodeReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{11}
}

type JoinGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode string `protobuf:"bytes,1,opt,name=gameCode,proto3" json:"gameCode,omitempty"`
}

func (x *JoinGameRequest) Reset() {
	*x = JoinGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameRequest) ProtoMessage() {}

func (x *JoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameRequest.ProtoReflect.Descriptor instead.
func (*JoinGameRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{12}
}

func (x *JoinGameRequest) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

type JoinGameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinGameReply) Reset() {
	*x = JoinGameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameReply) ProtoMessage() {}

func (x *JoinGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameReply.ProtoReflect.Descriptor instead.
func (*JoinGameReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{13}
}

type QuitGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuitGameRequest) Reset() {
	*x = QuitGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGameRequest) ProtoMessage() {}

func (x *QuitGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGameRequest.ProtoReflect.Descriptor instead.
func (*QuitGameRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{14}
}

type QuitGameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuitGameReply) Reset() {
	*x = QuitGameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGameReply) ProtoMessage() {}

func (x *QuitGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGameReply.ProtoReflect.Descriptor instead.
func (*QuitGameReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{15}
}

type StartGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{16}
}

type StartGameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartGameReply) Reset() {
	*x = StartGameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameReply) ProtoMessage() {}

func (x *StartGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameReply.ProtoReflect.Descriptor instead.
func (*StartGameReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{17}
}

type RestartWorldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartWorldRequest) Reset() {
	*x = RestartWorldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartWorldRequest) ProtoMessage() {}

func (x *RestartWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartWorldRequest.ProtoReflect.Descriptor instead.
func (*RestartWorldRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{18}
}

type RestartWorldReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartWorldReply) Reset() {
	*x = RestartWorldReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartWorldReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartWorldReply) ProtoMessage() {}

func (x *RestartWorldReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartWorldReply.ProtoReflect.Descriptor instead.
func (*RestartWorldReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{19}
}

type ExitWorldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitWorldRequest) Reset() {
	*x = ExitWorldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitWorldRequest) ProtoMessage() {}

func (x *ExitWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitWorldRequest.ProtoReflect.Descriptor instead.
func (*ExitWorldRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{20}
}

type ExitWorldReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitWorldReply) Reset() {
	*x = ExitWorldReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitWorldReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitWorldReply) ProtoMessage() {}

func (x *ExitWorldReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitWorldReply.ProtoReflect.Descriptor instead.
func (*ExitWorldReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{21}
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Player1 string     `protobuf:"bytes,2,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2 string     `protobuf:"bytes,3,opt,name=player2,proto3" json:"player2,omitempty"`
	Status  GameStatus `protobuf:"varint,4,opt,name=status,proto3,enum=lumbay2sv.GameStatus" json:"status,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{22}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetPlayer1() string {
	if x != nil {
		return x.Player1
	}
	return ""
}

func (x *Game) GetPlayer2() string {
	if x != nil {
		return x.Player2
	}
	return ""
}

func (x *Game) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_NONE
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Salt string `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{23}
}

func (x *Client) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Client) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{24}
}

type YouAreInGameUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *YouAreInGameUpdate) Reset() {
	*x = YouAreInGameUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouAreInGameUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouAreInGameUpdate) ProtoMessage() {}

func (x *YouAreInGameUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouAreInGameUpdate.ProtoReflect.Descriptor instead.
func (*YouAreInGameUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{25}
}

type WaitingForOtherPlayerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitingForOtherPlayerUpdate) Reset() {
	*x = WaitingForOtherPlayerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingForOtherPlayerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingForOtherPlayerUpdate) ProtoMessage() {}

func (x *WaitingForOtherPlayerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingForOtherPlayerUpdate.ProtoReflect.Descriptor instead.
func (*WaitingForOtherPlayerUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{26}
}

type ReadyToStartUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadyToStartUpdate) Reset() {
	*x = ReadyToStartUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToStartUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToStartUpdate) ProtoMessage() {}

func (x *ReadyToStartUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToStartUpdate.ProtoReflect.Descriptor instead.
func (*ReadyToStartUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{27}
}

type GameCodeGeneratedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode string `protobuf:"bytes,1,opt,name=game_code,json=gameCode,proto3" json:"game_code,omitempty"`
}

func (x *GameCodeGeneratedUpdate) Reset() {
	*x = GameCodeGeneratedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCodeGeneratedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCodeGeneratedUpdate) ProtoMessage() {}

func (x *GameCodeGeneratedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCodeGeneratedUpdate.ProtoReflect.Descriptor instead.
func (*GameCodeGeneratedUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{28}
}

func (x *GameCodeGeneratedUpdate) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

type YouQuitTheGameUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *YouQuitTheGameUpdate) Reset() {
	*x = YouQuitTheGameUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouQuitTheGameUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouQuitTheGameUpdate) ProtoMessage() {}

func (x *YouQuitTheGameUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouQuitTheGameUpdate.ProtoReflect.Descriptor instead.
func (*YouQuitTheGameUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{29}
}

type GameStartedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameStartedUpdate) Reset() {
	*x = GameStartedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStartedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartedUpdate) ProtoMessage() {}

func (x *GameStartedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartedUpdate.ProtoReflect.Descriptor instead.
func (*GameStartedUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{30}
}

type YouConfirmForRestartUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *YouConfirmForRestartUpdate) Reset() {
	*x = YouConfirmForRestartUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouConfirmForRestartUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouConfirmForRestartUpdate) ProtoMessage() {}

func (x *YouConfirmForRestartUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouConfirmForRestartUpdate.ProtoReflect.Descriptor instead.
func (*YouConfirmForRestartUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{31}
}

type OtherConfirmsForRestartUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OtherConfirmsForRestartUpdate) Reset() {
	*x = OtherConfirmsForRestartUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherConfirmsForRestartUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherConfirmsForRestartUpdate) ProtoMessage() {}

func (x *OtherConfirmsForRestartUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherConfirmsForRestartUpdate.ProtoReflect.Descriptor instead.
func (*OtherConfirmsForRestartUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{32}
}

type YouExitWorldUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *YouExitWorldUpdate) Reset() {
	*x = YouExitWorldUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouExitWorldUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouExitWorldUpdate) ProtoMessage() {}

func (x *YouExitWorldUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouExitWorldUpdate.ProtoReflect.Descriptor instead.
func (*YouExitWorldUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{33}
}

type OtherExitsWorldUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OtherExitsWorldUpdate) Reset() {
	*x = OtherExitsWorldUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherExitsWorldUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherExitsWorldUpdate) ProtoMessage() {}

func (x *OtherExitsWorldUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherExitsWorldUpdate.ProtoReflect.Descriptor instead.
func (*OtherExitsWorldUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{34}
}

type World struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbId string  `protobuf:"bytes,1,opt,name=db_id,json=dbId,proto3" json:"db_id,omitempty"`
	Id   WorldId `protobuf:"varint,2,opt,name=id,proto3,enum=lumbay2sv.WorldId" json:"id,omitempty"`
	// Types that are assignable to Type:
	//	*World_WorldOne
	Type isWorld_Type `protobuf_oneof:"type"`
}

func (x *World) Reset() {
	*x = World{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *World) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*World) ProtoMessage() {}

func (x *World) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use World.ProtoReflect.Descriptor instead.
func (*World) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{35}
}

func (x *World) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

func (x *World) GetId() WorldId {
	if x != nil {
		return x.Id
	}
	return WorldId_WORLD_ID_NONE
}

func (m *World) GetType() isWorld_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *World) GetWorldOne() *WorldOne {
	if x, ok := x.GetType().(*World_WorldOne); ok {
		return x.WorldOne
	}
	return nil
}

type isWorld_Type interface {
	isWorld_Type()
}

type World_WorldOne struct {
	WorldOne *WorldOne `protobuf:"bytes,3,opt,name=world_one,json=worldOne,proto3,oneof"`
}

func (*World_WorldOne) isWorld_Type() {}

type WorldOne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  WorldOneStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=lumbay2sv.WorldOneStatus" json:"status,omitempty"`
	Region  *WorldOneRegion   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Regions []*WorldOneRegion `protobuf:"bytes,4,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *WorldOne) Reset() {
	*x = WorldOne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOne) ProtoMessage() {}

func (x *WorldOne) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOne.ProtoReflect.Descriptor instead.
func (*WorldOne) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{36}
}

func (x *WorldOne) GetStatus() WorldOneStatus {
	if x != nil {
		return x.Status
	}
	return WorldOneStatus_WORLD_ONE_STATUS_NONE
}

func (x *WorldOne) GetRegion() *WorldOneRegion {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *WorldOne) GetRegions() []*WorldOneRegion {
	if x != nil {
		return x.Regions
	}
	return nil
}

type WorldOneRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      WorldOneRegionId  `protobuf:"varint,1,opt,name=id,proto3,enum=lumbay2sv.WorldOneRegionId" json:"id,omitempty"`
	Objects []*WorldOneObject `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *WorldOneRegion) Reset() {
	*x = WorldOneRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOneRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOneRegion) ProtoMessage() {}

func (x *WorldOneRegion) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOneRegion.ProtoReflect.Descriptor instead.
func (*WorldOneRegion) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{37}
}

func (x *WorldOneRegion) GetId() WorldOneRegionId {
	if x != nil {
		return x.Id
	}
	return WorldOneRegionId_WORLD_ONE_REGION_ID_NONE
}

func (x *WorldOneRegion) GetObjects() []*WorldOneObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

type WorldOneObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     WorldOneObjectId     `protobuf:"varint,1,opt,name=id,proto3,enum=lumbay2sv.WorldOneObjectId" json:"id,omitempty"`
	Data   *WorldOneObjectData  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Status WorldOneObjectStatus `protobuf:"varint,3,opt,name=status,proto3,enum=lumbay2sv.WorldOneObjectStatus" json:"status,omitempty"`
}

func (x *WorldOneObject) Reset() {
	*x = WorldOneObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOneObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOneObject) ProtoMessage() {}

func (x *WorldOneObject) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOneObject.ProtoReflect.Descriptor instead.
func (*WorldOneObject) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{38}
}

func (x *WorldOneObject) GetId() WorldOneObjectId {
	if x != nil {
		return x.Id
	}
	return WorldOneObjectId_WORLD_ONE_OBJECT_ID_NONE
}

func (x *WorldOneObject) GetData() *WorldOneObjectData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WorldOneObject) GetStatus() WorldOneObjectStatus {
	if x != nil {
		return x.Status
	}
	return WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_NONE
}

type WorldOneObjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*WorldOneObjectData_Location
	Type isWorldOneObjectData_Type `protobuf_oneof:"type"`
}

func (x *WorldOneObjectData) Reset() {
	*x = WorldOneObjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOneObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOneObjectData) ProtoMessage() {}

func (x *WorldOneObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOneObjectData.ProtoReflect.Descriptor instead.
func (*WorldOneObjectData) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{39}
}

func (m *WorldOneObjectData) GetType() isWorldOneObjectData_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *WorldOneObjectData) GetLocation() *WorldLocation {
	if x, ok := x.GetType().(*WorldOneObjectData_Location); ok {
		return x.Location
	}
	return nil
}

type isWorldOneObjectData_Type interface {
	isWorldOneObjectData_Type()
}

type WorldOneObjectData_Location struct {
	Location *WorldLocation `protobuf:"bytes,1,opt,name=location,proto3,oneof"`
}

func (*WorldOneObjectData_Location) isWorldOneObjectData_Type() {}

type WorldLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int64 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int64 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int64 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *WorldLocation) Reset() {
	*x = WorldLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldLocation) ProtoMessage() {}

func (x *WorldLocation) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldLocation.ProtoReflect.Descriptor instead.
func (*WorldLocation) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{40}
}

func (x *WorldLocation) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *WorldLocation) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *WorldLocation) GetZ() int64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type WorldOneRegionUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId WorldOneRegionId `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3,enum=lumbay2sv.WorldOneRegionId" json:"region_id,omitempty"`
}

func (x *WorldOneRegionUpdate) Reset() {
	*x = WorldOneRegionUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOneRegionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOneRegionUpdate) ProtoMessage() {}

func (x *WorldOneRegionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOneRegionUpdate.ProtoReflect.Descriptor instead.
func (*WorldOneRegionUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{41}
}

func (x *WorldOneRegionUpdate) GetRegionId() WorldOneRegionId {
	if x != nil {
		return x.RegionId
	}
	return WorldOneRegionId_WORLD_ONE_REGION_ID_NONE
}

type WorldOneStatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId WorldOneRegionId `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3,enum=lumbay2sv.WorldOneRegionId" json:"region_id,omitempty"`
	Status   WorldOneStatus   `protobuf:"varint,2,opt,name=status,proto3,enum=lumbay2sv.WorldOneStatus" json:"status,omitempty"`
}

func (x *WorldOneStatusUpdate) Reset() {
	*x = WorldOneStatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOneStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOneStatusUpdate) ProtoMessage() {}

func (x *WorldOneStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOneStatusUpdate.ProtoReflect.Descriptor instead.
func (*WorldOneStatusUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{42}
}

func (x *WorldOneStatusUpdate) GetRegionId() WorldOneRegionId {
	if x != nil {
		return x.RegionId
	}
	return WorldOneRegionId_WORLD_ONE_REGION_ID_NONE
}

func (x *WorldOneStatusUpdate) GetStatus() WorldOneStatus {
	if x != nil {
		return x.Status
	}
	return WorldOneStatus_WORLD_ONE_STATUS_NONE
}

type WorldOneObjectUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId     WorldOneRegionId     `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3,enum=lumbay2sv.WorldOneRegionId" json:"region_id,omitempty"`
	ObjectId     WorldOneObjectId     `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3,enum=lumbay2sv.WorldOneObjectId" json:"object_id,omitempty"`
	ObjectStatus WorldOneObjectStatus `protobuf:"varint,3,opt,name=object_status,json=objectStatus,proto3,enum=lumbay2sv.WorldOneObjectStatus" json:"object_status,omitempty"`
	ObjectData   *WorldOneObjectData  `protobuf:"bytes,4,opt,name=object_data,json=objectData,proto3" json:"object_data,omitempty"`
}

func (x *WorldOneObjectUpdate) Reset() {
	*x = WorldOneObjectUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldOneObjectUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldOneObjectUpdate) ProtoMessage() {}

func (x *WorldOneObjectUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldOneObjectUpdate.ProtoReflect.Descriptor instead.
func (*WorldOneObjectUpdate) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{43}
}

func (x *WorldOneObjectUpdate) GetRegionId() WorldOneRegionId {
	if x != nil {
		return x.RegionId
	}
	return WorldOneRegionId_WORLD_ONE_REGION_ID_NONE
}

func (x *WorldOneObjectUpdate) GetObjectId() WorldOneObjectId {
	if x != nil {
		return x.ObjectId
	}
	return WorldOneObjectId_WORLD_ONE_OBJECT_ID_NONE
}

func (x *WorldOneObjectUpdate) GetObjectStatus() WorldOneObjectStatus {
	if x != nil {
		return x.ObjectStatus
	}
	return WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_NONE
}

func (x *WorldOneObjectUpdate) GetObjectData() *WorldOneObjectData {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type ProcessWorldOneObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId     WorldOneRegionId     `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3,enum=lumbay2sv.WorldOneRegionId" json:"region_id,omitempty"`
	ObjectId     WorldOneObjectId     `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3,enum=lumbay2sv.WorldOneObjectId" json:"object_id,omitempty"`
	ObjectStatus WorldOneObjectStatus `protobuf:"varint,3,opt,name=object_status,json=objectStatus,proto3,enum=lumbay2sv.WorldOneObjectStatus" json:"object_status,omitempty"`
	ObjectData   *WorldOneObjectData  `protobuf:"bytes,4,opt,name=object_data,json=objectData,proto3" json:"object_data,omitempty"`
}

func (x *ProcessWorldOneObjectRequest) Reset() {
	*x = ProcessWorldOneObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWorldOneObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWorldOneObjectRequest) ProtoMessage() {}

func (x *ProcessWorldOneObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWorldOneObjectRequest.ProtoReflect.Descriptor instead.
func (*ProcessWorldOneObjectRequest) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{44}
}

func (x *ProcessWorldOneObjectRequest) GetRegionId() WorldOneRegionId {
	if x != nil {
		return x.RegionId
	}
	return WorldOneRegionId_WORLD_ONE_REGION_ID_NONE
}

func (x *ProcessWorldOneObjectRequest) GetObjectId() WorldOneObjectId {
	if x != nil {
		return x.ObjectId
	}
	return WorldOneObjectId_WORLD_ONE_OBJECT_ID_NONE
}

func (x *ProcessWorldOneObjectRequest) GetObjectStatus() WorldOneObjectStatus {
	if x != nil {
		return x.ObjectStatus
	}
	return WorldOneObjectStatus_WORLD_ONE_OBJECT_STATUS_NONE
}

func (x *ProcessWorldOneObjectRequest) GetObjectData() *WorldOneObjectData {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type ProcessWorldOneObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessWorldOneObjectReply) Reset() {
	*x = ProcessWorldOneObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumbay2_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWorldOneObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWorldOneObjectReply) ProtoMessage() {}

func (x *ProcessWorldOneObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_lumbay2_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWorldOneObjectReply.ProtoReflect.Descriptor instead.
func (*ProcessWorldOneObjectReply) Descriptor() ([]byte, []int) {
	return file_lumbay2_proto_rawDescGZIP(), []int{45}
}

var File_lumbay2_proto protoreflect.FileDescriptor

var file_lumbay2_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x22, 0x9c, 0x0a, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c,
	0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x16, 0x79, 0x6f, 0x75, 0x5f, 0x61, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x59, 0x6f, 0x75, 0x41, 0x72, 0x65, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x79, 0x6f, 0x75, 0x41, 0x72, 0x65, 0x49, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6e, 0x0a, 0x1f, 0x77, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x6d, 0x62,
	0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x54,
	0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x75,
	0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x18, 0x79, 0x6f, 0x75, 0x5f, 0x71, 0x75, 0x69, 0x74,
	0x5f, 0x74, 0x68, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32,
	0x73, 0x76, 0x2e, 0x59, 0x6f, 0x75, 0x51, 0x75, 0x69, 0x74, 0x54, 0x68, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x14, 0x79, 0x6f, 0x75, 0x51, 0x75,
	0x69, 0x74, 0x54, 0x68, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x4e, 0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c,
	0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x58, 0x0a, 0x17, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x14, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x17, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d,
	0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x14, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x17, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76,
	0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x14, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6b, 0x0a,
	0x1e, 0x79, 0x6f, 0x75, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x59, 0x6f, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1a,
	0x79, 0x6f, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x74, 0x0a, 0x21, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x46,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x1d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x73,
	0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x52, 0x0a, 0x15, 0x79, 0x6f, 0x75, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x59, 0x6f, 0x75, 0x45,
	0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x12, 0x79, 0x6f, 0x75, 0x45, 0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x5b, 0x0a, 0x18, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x78,
	0x69, 0x74, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32,
	0x73, 0x76, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x73, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x15, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfe, 0x06, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x19, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61,
	0x79, 0x32, 0x73, 0x76, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x1a, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x75, 0x6d, 0x62,
	0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x17, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x1a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c,
	0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32,
	0x73, 0x76, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x71, 0x75, 0x69, 0x74, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x51, 0x75, 0x69,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f,
	0x71, 0x75, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x75,
	0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71, 0x0a, 0x20,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6f, 0x6e,
	0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32,
	0x73, 0x76, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f,
	0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x1c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f,
	0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x54, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x13, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x12, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x45, 0x78,
	0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x10, 0x65, 0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc0, 0x06, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x17, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x14, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5b,
	0x0a, 0x18, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x00, 0x52, 0x15, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32,
	0x73, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x18, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79,
	0x32, 0x73, 0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x75,
	0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x71, 0x75, 0x69, 0x74, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x51, 0x75, 0x69, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x71, 0x75, 0x69,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48,
	0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x6b, 0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x6d, 0x62,
	0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x48, 0x00, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e,
	0x0a, 0x13, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75,
	0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45,
	0x0a, 0x10, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61,
	0x79, 0x32, 0x73, 0x76, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2d, 0x0a, 0x17, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x33, 0x0a, 0x14, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x13, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x17, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x51, 0x75, 0x69, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x51,
	0x75, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x10, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12,
	0x0a, 0x10, 0x45, 0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x78, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x79, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x2c, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x06, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x14, 0x0a, 0x12, 0x59, 0x6f, 0x75, 0x41, 0x72, 0x65, 0x49,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x36, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x59, 0x6f, 0x75, 0x51,
	0x75, 0x69, 0x74, 0x54, 0x68, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x59, 0x6f, 0x75, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x59, 0x6f, 0x75, 0x45, 0x78, 0x69, 0x74, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x7c, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61,
	0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xa5, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x72, 0x0a, 0x0e, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79,
	0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x6d, 0x62,
	0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xa9, 0x01,
	0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c,
	0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75,
	0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x36, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x39, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x7a, 0x22, 0x50, 0x0a, 0x14, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a,
	0x14, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61,
	0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61,
	0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32,
	0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x6d,
	0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x98, 0x02, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62,
	0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0d, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x55,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x54, 0x4f,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x2e, 0x0a, 0x07, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x11, 0x0a, 0x0d, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x49, 0x44, 0x5f,
	0x4f, 0x4e, 0x45, 0x10, 0x01, 0x2a, 0x90, 0x06, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x59, 0x4f, 0x55, 0x52, 0x5f, 0x54, 0x55, 0x52,
	0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x57,
	0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x59, 0x4f, 0x55, 0x52, 0x5f, 0x54, 0x55,
	0x52, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x59, 0x4f, 0x55, 0x5f, 0x57, 0x49, 0x4e,
	0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x59, 0x4f, 0x55, 0x5f, 0x4c, 0x4f, 0x53, 0x45, 0x10,
	0x04, 0x12, 0x2c, 0x0a, 0x28, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x59, 0x4f, 0x55, 0x5f, 0x57, 0x49, 0x4e, 0x5f, 0x42, 0x59,
	0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x53, 0x10, 0x05, 0x12,
	0x2d, 0x0a, 0x29, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x59, 0x4f, 0x55, 0x5f, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x42, 0x59, 0x5f,
	0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x53, 0x10, 0x06, 0x12, 0x24,
	0x0a, 0x20, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x49,
	0x4e, 0x53, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x54, 0x57, 0x4f, 0x5f, 0x57, 0x49, 0x4e, 0x53, 0x10, 0x08, 0x12, 0x34, 0x0a, 0x30, 0x57, 0x4f,
	0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x57, 0x49, 0x4e, 0x53, 0x5f, 0x42,
	0x59, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x53, 0x10, 0x09,
	0x12, 0x34, 0x0a, 0x30, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f,
	0x57, 0x49, 0x4e, 0x53, 0x5f, 0x42, 0x59, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x4d,
	0x4f, 0x56, 0x45, 0x53, 0x10, 0x0a, 0x12, 0x25, 0x0a, 0x21, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x25, 0x0a,
	0x21, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x4d, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x0c, 0x12, 0x30, 0x0a, 0x2c, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x4f, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x53, 0x5f, 0x52, 0x45, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x10, 0x0d, 0x12, 0x30, 0x0a, 0x2c, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x53, 0x5f, 0x52,
	0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x0e, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x26, 0x0a, 0x22, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x10,
	0x12, 0x26, 0x0a, 0x22, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f,
	0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x11, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x41,
	0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x12, 0x2a, 0x4d, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x18,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e,
	0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x4f,
	0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x49,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x2a, 0x9c, 0x03, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x18,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x57, 0x4f,
	0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49,
	0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x5f, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x54,
	0x48, 0x52, 0x45, 0x45, 0x10, 0x03, 0x12, 0x2c, 0x0a, 0x28, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x4f,
	0x4e, 0x45, 0x10, 0x04, 0x12, 0x2c, 0x0a, 0x28, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e,
	0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x57, 0x4f,
	0x10, 0x05, 0x12, 0x2e, 0x0a, 0x2a, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45,
	0x10, 0x06, 0x12, 0x28, 0x0a, 0x24, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x07, 0x12, 0x28, 0x0a, 0x24,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x54, 0x57, 0x4f, 0x10, 0x08, 0x2a, 0xa6, 0x01, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4f, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x1c, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x23, 0x0a, 0x1f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x50, 0x41,
	0x57, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x57, 0x4f, 0x52,
	0x4c, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x32,
	0x7b, 0x0a, 0x0c, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x12,
	0x35, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x10, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73,
	0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x10, 0x5a, 0x0e,
	0x6c, 0x75, 0x6d, 0x62, 0x61, 0x79, 0x32, 0x73, 0x76, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lumbay2_proto_rawDescOnce sync.Once
	file_lumbay2_proto_rawDescData = file_lumbay2_proto_rawDesc
)

func file_lumbay2_proto_rawDescGZIP() []byte {
	file_lumbay2_proto_rawDescOnce.Do(func() {
		file_lumbay2_proto_rawDescData = protoimpl.X.CompressGZIP(file_lumbay2_proto_rawDescData)
	})
	return file_lumbay2_proto_rawDescData
}

var file_lumbay2_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_lumbay2_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_lumbay2_proto_goTypes = []interface{}{
	(GameStatus)(0),                       // 0: lumbay2sv.GameStatus
	(WorldId)(0),                          // 1: lumbay2sv.WorldId
	(WorldOneStatus)(0),                   // 2: lumbay2sv.WorldOneStatus
	(WorldOneRegionId)(0),                 // 3: lumbay2sv.WorldOneRegionId
	(WorldOneObjectId)(0),                 // 4: lumbay2sv.WorldOneObjectId
	(WorldOneObjectStatus)(0),             // 5: lumbay2sv.WorldOneObjectStatus
	(*Update)(nil),                        // 6: lumbay2sv.Update
	(*Request)(nil),                       // 7: lumbay2sv.Request
	(*Reply)(nil),                         // 8: lumbay2sv.Reply
	(*Empty)(nil),                         // 9: lumbay2sv.Empty
	(*AcquireClientIdRequest)(nil),        // 10: lumbay2sv.AcquireClientIdRequest
	(*AcquirePublicKeyRequest)(nil),       // 11: lumbay2sv.AcquirePublicKeyRequest
	(*AcquireClientIdReply)(nil),          // 12: lumbay2sv.AcquireClientIdReply
	(*AcquirePublicKeyReply)(nil),         // 13: lumbay2sv.AcquirePublicKeyReply
	(*CreateGameRequest)(nil),             // 14: lumbay2sv.CreateGameRequest
	(*CreateGameReply)(nil),               // 15: lumbay2sv.CreateGameReply
	(*GenerateGameCodeRequest)(nil),       // 16: lumbay2sv.GenerateGameCodeRequest
	(*GenerateGameCodeReply)(nil),         // 17: lumbay2sv.GenerateGameCodeReply
	(*JoinGameRequest)(nil),               // 18: lumbay2sv.JoinGameRequest
	(*JoinGameReply)(nil),                 // 19: lumbay2sv.JoinGameReply
	(*QuitGameRequest)(nil),               // 20: lumbay2sv.QuitGameRequest
	(*QuitGameReply)(nil),                 // 21: lumbay2sv.QuitGameReply
	(*StartGameRequest)(nil),              // 22: lumbay2sv.StartGameRequest
	(*StartGameReply)(nil),                // 23: lumbay2sv.StartGameReply
	(*RestartWorldRequest)(nil),           // 24: lumbay2sv.RestartWorldRequest
	(*RestartWorldReply)(nil),             // 25: lumbay2sv.RestartWorldReply
	(*ExitWorldRequest)(nil),              // 26: lumbay2sv.ExitWorldRequest
	(*ExitWorldReply)(nil),                // 27: lumbay2sv.ExitWorldReply
	(*Game)(nil),                          // 28: lumbay2sv.Game
	(*Client)(nil),                        // 29: lumbay2sv.Client
	(*Ping)(nil),                          // 30: lumbay2sv.Ping
	(*YouAreInGameUpdate)(nil),            // 31: lumbay2sv.YouAreInGameUpdate
	(*WaitingForOtherPlayerUpdate)(nil),   // 32: lumbay2sv.WaitingForOtherPlayerUpdate
	(*ReadyToStartUpdate)(nil),            // 33: lumbay2sv.ReadyToStartUpdate
	(*GameCodeGeneratedUpdate)(nil),       // 34: lumbay2sv.GameCodeGeneratedUpdate
	(*YouQuitTheGameUpdate)(nil),          // 35: lumbay2sv.YouQuitTheGameUpdate
	(*GameStartedUpdate)(nil),             // 36: lumbay2sv.GameStartedUpdate
	(*YouConfirmForRestartUpdate)(nil),    // 37: lumbay2sv.YouConfirmForRestartUpdate
	(*OtherConfirmsForRestartUpdate)(nil), // 38: lumbay2sv.OtherConfirmsForRestartUpdate
	(*YouExitWorldUpdate)(nil),            // 39: lumbay2sv.YouExitWorldUpdate
	(*OtherExitsWorldUpdate)(nil),         // 40: lumbay2sv.OtherExitsWorldUpdate
	(*World)(nil),                         // 41: lumbay2sv.World
	(*WorldOne)(nil),                      // 42: lumbay2sv.WorldOne
	(*WorldOneRegion)(nil),                // 43: lumbay2sv.WorldOneRegion
	(*WorldOneObject)(nil),                // 44: lumbay2sv.WorldOneObject
	(*WorldOneObjectData)(nil),            // 45: lumbay2sv.WorldOneObjectData
	(*WorldLocation)(nil),                 // 46: lumbay2sv.WorldLocation
	(*WorldOneRegionUpdate)(nil),          // 47: lumbay2sv.WorldOneRegionUpdate
	(*WorldOneStatusUpdate)(nil),          // 48: lumbay2sv.WorldOneStatusUpdate
	(*WorldOneObjectUpdate)(nil),          // 49: lumbay2sv.WorldOneObjectUpdate
	(*ProcessWorldOneObjectRequest)(nil),  // 50: lumbay2sv.ProcessWorldOneObjectRequest
	(*ProcessWorldOneObjectReply)(nil),    // 51: lumbay2sv.ProcessWorldOneObjectReply
}
var file_lumbay2_proto_depIdxs = []int32{
	30, // 0: lumbay2sv.Update.ping:type_name -> lumbay2sv.Ping
	31, // 1: lumbay2sv.Update.you_are_in_game_update:type_name -> lumbay2sv.YouAreInGameUpdate
	32, // 2: lumbay2sv.Update.waiting_for_other_player_update:type_name -> lumbay2sv.WaitingForOtherPlayerUpdate
	33, // 3: lumbay2sv.Update.ready_to_start_update:type_name -> lumbay2sv.ReadyToStartUpdate
	34, // 4: lumbay2sv.Update.game_code_generated:type_name -> lumbay2sv.GameCodeGeneratedUpdate
	35, // 5: lumbay2sv.Update.you_quit_the_game_update:type_name -> lumbay2sv.YouQuitTheGameUpdate
	36, // 6: lumbay2sv.Update.game_started_update:type_name -> lumbay2sv.GameStartedUpdate
	47, // 7: lumbay2sv.Update.world_one_region_update:type_name -> lumbay2sv.WorldOneRegionUpdate
	48, // 8: lumbay2sv.Update.world_one_status_update:type_name -> lumbay2sv.WorldOneStatusUpdate
	49, // 9: lumbay2sv.Update.world_one_object_update:type_name -> lumbay2sv.WorldOneObjectUpdate
	37, // 10: lumbay2sv.Update.you_confirm_for_restart_update:type_name -> lumbay2sv.YouConfirmForRestartUpdate
	38, // 11: lumbay2sv.Update.other_confirms_for_restart_update:type_name -> lumbay2sv.OtherConfirmsForRestartUpdate
	39, // 12: lumbay2sv.Update.you_exit_world_update:type_name -> lumbay2sv.YouExitWorldUpdate
	40, // 13: lumbay2sv.Update.other_exits_world_update:type_name -> lumbay2sv.OtherExitsWorldUpdate
	10, // 14: lumbay2sv.Request.acquire_client_id_request:type_name -> lumbay2sv.AcquireClientIdRequest
	11, // 15: lumbay2sv.Request.acquire_public_key_request:type_name -> lumbay2sv.AcquirePublicKeyRequest
	14, // 16: lumbay2sv.Request.create_game_request:type_name -> lumbay2sv.CreateGameRequest
	16, // 17: lumbay2sv.Request.generate_game_code_request:type_name -> lumbay2sv.GenerateGameCodeRequest
	18, // 18: lumbay2sv.Request.join_game_request:type_name -> lumbay2sv.JoinGameRequest
	20, // 19: lumbay2sv.Request.quit_game_request:type_name -> lumbay2sv.QuitGameRequest
	22, // 20: lumbay2sv.Request.start_game_request:type_name -> lumbay2sv.StartGameRequest
	50, // 21: lumbay2sv.Request.process_world_one_object_request:type_name -> lumbay2sv.ProcessWorldOneObjectRequest
	24, // 22: lumbay2sv.Request.restart_world_request:type_name -> lumbay2sv.RestartWorldRequest
	26, // 23: lumbay2sv.Request.exit_world_request:type_name -> lumbay2sv.ExitWorldRequest
	12, // 24: lumbay2sv.Reply.acquire_client_id_reply:type_name -> lumbay2sv.AcquireClientIdReply
	13, // 25: lumbay2sv.Reply.acquire_public_key_reply:type_name -> lumbay2sv.AcquirePublicKeyReply
	15, // 26: lumbay2sv.Reply.create_game_reply:type_name -> lumbay2sv.CreateGameReply
	17, // 27: lumbay2sv.Reply.generate_game_code_reply:type_name -> lumbay2sv.GenerateGameCodeReply
	19, // 28: lumbay2sv.Reply.join_game_reply:type_name -> lumbay2sv.JoinGameReply
	21, // 29: lumbay2sv.Reply.quit_game_reply:type_name -> lumbay2sv.QuitGameReply
	23, // 30: lumbay2sv.Reply.start_game_reply:type_name -> lumbay2sv.StartGameReply
	51, // 31: lumbay2sv.Reply.process_world_one_object_reply:type_name -> lumbay2sv.ProcessWorldOneObjectReply
	25, // 32: lumbay2sv.Reply.restart_world_reply:type_name -> lumbay2sv.RestartWorldReply
	27, // 33: lumbay2sv.Reply.exit_world_reply:type_name -> lumbay2sv.ExitWorldReply
	0,  // 34: lumbay2sv.Game.status:type_name -> lumbay2sv.GameStatus
	1,  // 35: lumbay2sv.World.id:type_name -> lumbay2sv.WorldId
	42, // 36: lumbay2sv.World.world_one:type_name -> lumbay2sv.WorldOne
	2,  // 37: lumbay2sv.WorldOne.status:type_name -> lumbay2sv.WorldOneStatus
	43, // 38: lumbay2sv.WorldOne.region:type_name -> lumbay2sv.WorldOneRegion
	43, // 39: lumbay2sv.WorldOne.regions:type_name -> lumbay2sv.WorldOneRegion
	3,  // 40: lumbay2sv.WorldOneRegion.id:type_name -> lumbay2sv.WorldOneRegionId
	44, // 41: lumbay2sv.WorldOneRegion.objects:type_name -> lumbay2sv.WorldOneObject
	4,  // 42: lumbay2sv.WorldOneObject.id:type_name -> lumbay2sv.WorldOneObjectId
	45, // 43: lumbay2sv.WorldOneObject.data:type_name -> lumbay2sv.WorldOneObjectData
	5,  // 44: lumbay2sv.WorldOneObject.status:type_name -> lumbay2sv.WorldOneObjectStatus
	46, // 45: lumbay2sv.WorldOneObjectData.location:type_name -> lumbay2sv.WorldLocation
	3,  // 46: lumbay2sv.WorldOneRegionUpdate.region_id:type_name -> lumbay2sv.WorldOneRegionId
	3,  // 47: lumbay2sv.WorldOneStatusUpdate.region_id:type_name -> lumbay2sv.WorldOneRegionId
	2,  // 48: lumbay2sv.WorldOneStatusUpdate.status:type_name -> lumbay2sv.WorldOneStatus
	3,  // 49: lumbay2sv.WorldOneObjectUpdate.region_id:type_name -> lumbay2sv.WorldOneRegionId
	4,  // 50: lumbay2sv.WorldOneObjectUpdate.object_id:type_name -> lumbay2sv.WorldOneObjectId
	5,  // 51: lumbay2sv.WorldOneObjectUpdate.object_status:type_name -> lumbay2sv.WorldOneObjectStatus
	45, // 52: lumbay2sv.WorldOneObjectUpdate.object_data:type_name -> lumbay2sv.WorldOneObjectData
	3,  // 53: lumbay2sv.ProcessWorldOneObjectRequest.region_id:type_name -> lumbay2sv.WorldOneRegionId
	4,  // 54: lumbay2sv.ProcessWorldOneObjectRequest.object_id:type_name -> lumbay2sv.WorldOneObjectId
	5,  // 55: lumbay2sv.ProcessWorldOneObjectRequest.object_status:type_name -> lumbay2sv.WorldOneObjectStatus
	45, // 56: lumbay2sv.ProcessWorldOneObjectRequest.object_data:type_name -> lumbay2sv.WorldOneObjectData
	7,  // 57: lumbay2sv.LumbayLumbay.SendRequest:input_type -> lumbay2sv.Request
	9,  // 58: lumbay2sv.LumbayLumbay.Subscribe:input_type -> lumbay2sv.Empty
	8,  // 59: lumbay2sv.LumbayLumbay.SendRequest:output_type -> lumbay2sv.Reply
	6,  // 60: lumbay2sv.LumbayLumbay.Subscribe:output_type -> lumbay2sv.Update
	59, // [59:61] is the sub-list for method output_type
	57, // [57:59] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_lumbay2_proto_init() }
func file_lumbay2_proto_init() {
	if File_lumbay2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lumbay2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireClientIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquirePublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireClientIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquirePublicKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateGameCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateGameCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartWorldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartWorldReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitWorldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitWorldReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouAreInGameUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingForOtherPlayerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToStartUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCodeGeneratedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouQuitTheGameUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStartedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouConfirmForRestartUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherConfirmsForRestartUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouExitWorldUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherExitsWorldUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*World); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOneRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOneObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOneObjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOneRegionUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOneStatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldOneObjectUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWorldOneObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumbay2_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWorldOneObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lumbay2_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Update_Ping)(nil),
		(*Update_YouAreInGameUpdate)(nil),
		(*Update_WaitingForOtherPlayerUpdate)(nil),
		(*Update_ReadyToStartUpdate)(nil),
		(*Update_GameCodeGenerated)(nil),
		(*Update_YouQuitTheGameUpdate)(nil),
		(*Update_GameStartedUpdate)(nil),
		(*Update_WorldOneRegionUpdate)(nil),
		(*Update_WorldOneStatusUpdate)(nil),
		(*Update_WorldOneObjectUpdate)(nil),
		(*Update_YouConfirmForRestartUpdate)(nil),
		(*Update_OtherConfirmsForRestartUpdate)(nil),
		(*Update_YouExitWorldUpdate)(nil),
		(*Update_OtherExitsWorldUpdate)(nil),
	}
	file_lumbay2_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Request_AcquireClientIdRequest)(nil),
		(*Request_AcquirePublicKeyRequest)(nil),
		(*Request_CreateGameRequest)(nil),
		(*Request_GenerateGameCodeRequest)(nil),
		(*Request_JoinGameRequest)(nil),
		(*Request_QuitGameRequest)(nil),
		(*Request_StartGameRequest)(nil),
		(*Request_ProcessWorldOneObjectRequest)(nil),
		(*Request_RestartWorldRequest)(nil),
		(*Request_ExitWorldRequest)(nil),
	}
	file_lumbay2_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Reply_AcquireClientIdReply)(nil),
		(*Reply_AcquirePublicKeyReply)(nil),
		(*Reply_CreateGameReply)(nil),
		(*Reply_GenerateGameCodeReply)(nil),
		(*Reply_JoinGameReply)(nil),
		(*Reply_QuitGameReply)(nil),
		(*Reply_StartGameReply)(nil),
		(*Reply_ProcessWorldOneObjectReply)(nil),
		(*Reply_RestartWorldReply)(nil),
		(*Reply_ExitWorldReply)(nil),
	}
	file_lumbay2_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*World_WorldOne)(nil),
	}
	file_lumbay2_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*WorldOneObjectData_Location)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lumbay2_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lumbay2_proto_goTypes,
		DependencyIndexes: file_lumbay2_proto_depIdxs,
		EnumInfos:         file_lumbay2_proto_enumTypes,
		MessageInfos:      file_lumbay2_proto_msgTypes,
	}.Build()
	File_lumbay2_proto = out.File
	file_lumbay2_proto_rawDesc = nil
	file_lumbay2_proto_goTypes = nil
	file_lumbay2_proto_depIdxs = nil
}
