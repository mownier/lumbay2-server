syntax = "proto3";

package lumbay2sv;

option go_package="lumbay2sv/main";

service LumbayLumbay {
    rpc SendRequest(Request) returns (Reply) {}
    rpc Subscribe(Empty) returns (stream Update) {}
}

message Update {
    int64 sequence_number = 1;
    oneof type {
        Ping ping = 2;
        GameStatusUpdate game_status_update = 3;
        GameCodeGeneratedUpdate game_code_generated = 4;
        WorldOneRegionUpdate world_one_region_update = 5;
        WorldOneStatusUpdate world_one_status_update = 6;
        WorldOneObjectUpdate world_one_object_update = 7;
    }
}

message Request {
    oneof type {
        AcquireClientIdRequest acquire_client_id_request = 1;
        AcquirePublicKeyRequest acquire_public_key_request = 2;
        CreateGameRequest create_game_request = 3;
        GenerateGameCodeRequest generate_game_code_request = 4;
        JoinGameRequest join_game_request = 5;
        QuitGameRequest quit_game_request = 6;
        StartGameRequest start_game_request = 7;
        ProcessWorldOneObjectRequest process_world_one_object_request = 8;
        RestartWorldRequest restart_world_request = 9;
        ExitWorldRequest exit_world_request = 10;
    }
}

message Reply {
    oneof type {
        AcquireClientIdReply acquire_client_id_reply = 1;
        AcquirePublicKeyReply acquire_public_key_reply = 2;
        CreateGameReply create_game_reply = 3;
        GenerateGameCodeReply generate_game_code_reply = 4;
        JoinGameReply join_game_reply = 5;
        QuitGameReply quit_game_reply = 6;
        StartGameReply start_game_reply = 7;
        ProcessWorldOneObjectReply process_world_one_object_reply = 8;
        RestartWorldReply restart_world_reply = 9;
        ExitWorldReply exit_world_reply = 10;
    }
}

message Empty {}

message AcquireClientIdRequest {
}

message AcquirePublicKeyRequest {
    string name = 1;
}

message AcquireClientIdReply {
    string client_id = 1;
}

message AcquirePublicKeyReply {
    string public_key = 1;
}

message CreateGameRequest {
}

message CreateGameReply {
}

message GenerateGameCodeRequest {
}

message GenerateGameCodeReply {
}

message JoinGameRequest {
    string gameCode = 1;
}

message JoinGameReply {
}

message QuitGameRequest {
}

message QuitGameReply {
}

message StartGameRequest {
}

message StartGameReply {
}

message RestartWorldRequest {
}

message RestartWorldReply {
}

message ExitWorldRequest {
}

message ExitWorldReply {
}

message Game {
    string id = 1;
    string player1 = 2;
    string player2 = 3;
    GameStatus status = 4;
}

message Client {
    string id = 1;
    string salt = 2;
}

message Ping {
}

message GameStatusUpdate {
    GameStatus status = 1;
}

message GameCodeGeneratedUpdate {
    string game_code = 1;
}

enum GameStatus {
    GAME_STATUS_NONE = 0;
    GAME_STATUS_WAITING_FOR_OTHER_PLAYER = 1;
    GAME_STATUS_READY_TO_START = 2;
    GAME_STATUS_STARTED = 3;
}

message World {
    string db_id = 1;
    WorldId id = 2;
    oneof type {
        WorldOne world_one = 3;
    }
}

enum WorldId {
    WORLD_ID_NONE = 0;
    WORLD_ID_ONE = 1;
}

message WorldOne {
    WorldOneStatus status = 2;
    WorldOneRegion region = 3;
    repeated WorldOneRegionId regionIds = 4;
}

enum WorldOneStatus {
    WORLD_ONE_STATUS_NONE = 0;
    WORLD_ONE_STATUS_PLAYER_ONE_MOVED = 1;
    WORLD_ONE_STATUS_PLAYER_TWO_MOVED = 2;
    WORLD_ONE_STATUS_PLAYER_ONE_WINS = 3;
    WORLD_ONE_STATUS_PLAYER_TWO_WINS = 4;
    WORLD_ONE_STATUS_PLAYER_ONE_WINS_BY_OUT_OF_MOVES = 5;
    WORLD_ONE_STATUS_PLAYER_TWO_WINS_BY_OUT_OF_MOVES = 6;
    WORLD_ONE_STATUS_PLAYER_ONE_CONFIRMS_RESTART = 7;
    WORLD_ONE_STATUS_PLAYER_TWO_CONFIRMS_RESTART = 8;
    WORLD_ONE_STATUS_PLAYER_ONE_EXITED = 9;
    WORLD_ONE_STATUS_PLAYER_TWO_EXITED = 10;
    WORLD_ONE_STATUS_ABANDONED = 11;
    WORLD_ONE_STATUS_PLAYER_ONE_FIRST_MOVE = 12;
    WORLD_ONE_STATUS_PLAYER_TWO_FIRST_MOVE = 13;
}

message WorldOneRegion {
    WorldOneRegionId id = 1;
    repeated WorldOneObject objects = 2;
}

enum WorldOneRegionId {
    WORLD_ONE_REGION_ID_NONE = 0;
    WORLD_ONE_REGION_ID_ONE = 1;
}

message WorldOneObject {
    WorldOneObjectId id = 1;
    WorldOneObjectData data = 2;
    WorldOneObjectStatus status = 3;
}

enum WorldOneObjectId {
    WORLD_ONE_OBJECT_ID_NONE = 0;
    WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_ONE = 1;
    WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_TWO = 2;
    WORLD_ONE_OBJECT_ID_PLAYER_ONE_STONE_THREE = 3;
    WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_ONE = 4;
    WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_TWO = 5;
    WORLD_ONE_OBJECT_ID_PLAYER_TWO_STONE_THREE = 6;
    WORLD_ONE_OBJECT_ID_STONE_PLAYER_ONE = 7;
    WORLD_ONE_OBJECT_ID_STONE_PLAYER_TWO = 8;
}

message WorldOneObjectData {
    oneof type {
        WorldLocation location = 1;
    }
}

message WorldLocation {
    int64 x = 1;
    int64 y = 2;
    int64 z = 3;
}

enum WorldOneObjectStatus {
    WORLD_ONE_OBJECT_STATUS_NONE = 0;
    WORLD_ONE_OBJECT_STATUS_SPAWNED = 1;
    WORLD_ONE_OBJECT_STATUS_MOVED = 2;
    WORLD_ONE_OBJECT_STATUS_ASSIGNED = 3;
}

message WorldOneRegionUpdate {
    WorldOneRegionId region_id = 1;
}

message WorldOneStatusUpdate {
    WorldOneRegionId region_id = 1;
    WorldOneStatus status = 2;
}

message WorldOneObjectUpdate {
    WorldOneRegionId region_id = 1;
    WorldOneObjectId object_id = 2;
    WorldOneObjectStatus object_status = 3;
    WorldOneObjectData object_data = 4;
}

message ProcessWorldOneObjectRequest {
    WorldOneRegionId region_id = 1;
    WorldOneObjectId object_id = 2;
    WorldOneObjectStatus object_status = 3;
    WorldOneObjectData object_data = 4;
}

message ProcessWorldOneObjectReply {
}